# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: auth/auth.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from ..common import error_pb2 as common_dot_error__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='auth/auth.proto',
  package='dfs.auth',
  syntax='proto3',
  serialized_options=None,
  serialized_pb=_b('\n\x0f\x61uth/auth.proto\x12\x08\x64\x66s.auth\x1a\x12\x63ommon/error.proto\":\n\x07Request\x12\x0e\n\x06userId\x18\x01 \x01(\x03\x12\x10\n\x08userName\x18\x02 \x01(\t\x12\r\n\x05token\x18\x03 \x01(\t\"H\n\x08Response\x12\x0f\n\x07success\x18\x01 \x01(\x08\x12\x1c\n\x05\x65rror\x18\x02 \x01(\x0b\x32\r.common.Error\x12\r\n\x05token\x18\x03 \x01(\t2\xc5\x01\n\x07\x41uthSrv\x12:\n\x0fMakeAccessToken\x12\x11.dfs.auth.Request\x1a\x12.dfs.auth.Response\"\x00\x12=\n\x12\x44\x65lUserAccessToken\x12\x11.dfs.auth.Request\x1a\x12.dfs.auth.Response\"\x00\x12?\n\x14GetCachedAccessToken\x12\x11.dfs.auth.Request\x1a\x12.dfs.auth.Response\"\x00\x62\x06proto3')
  ,
  dependencies=[common_dot_error__pb2.DESCRIPTOR,])




_REQUEST = _descriptor.Descriptor(
  name='Request',
  full_name='dfs.auth.Request',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='userId', full_name='dfs.auth.Request.userId', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='userName', full_name='dfs.auth.Request.userName', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='token', full_name='dfs.auth.Request.token', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=49,
  serialized_end=107,
)


_RESPONSE = _descriptor.Descriptor(
  name='Response',
  full_name='dfs.auth.Response',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='success', full_name='dfs.auth.Response.success', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='error', full_name='dfs.auth.Response.error', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='token', full_name='dfs.auth.Response.token', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=109,
  serialized_end=181,
)

_RESPONSE.fields_by_name['error'].message_type = common_dot_error__pb2._ERROR
DESCRIPTOR.message_types_by_name['Request'] = _REQUEST
DESCRIPTOR.message_types_by_name['Response'] = _RESPONSE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

Request = _reflection.GeneratedProtocolMessageType('Request', (_message.Message,), {
  'DESCRIPTOR' : _REQUEST,
  '__module__' : 'auth.auth_pb2'
  # @@protoc_insertion_point(class_scope:dfs.auth.Request)
  })
_sym_db.RegisterMessage(Request)

Response = _reflection.GeneratedProtocolMessageType('Response', (_message.Message,), {
  'DESCRIPTOR' : _RESPONSE,
  '__module__' : 'auth.auth_pb2'
  # @@protoc_insertion_point(class_scope:dfs.auth.Response)
  })
_sym_db.RegisterMessage(Response)



_AUTHSRV = _descriptor.ServiceDescriptor(
  name='AuthSrv',
  full_name='dfs.auth.AuthSrv',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  serialized_start=184,
  serialized_end=381,
  methods=[
  _descriptor.MethodDescriptor(
    name='MakeAccessToken',
    full_name='dfs.auth.AuthSrv.MakeAccessToken',
    index=0,
    containing_service=None,
    input_type=_REQUEST,
    output_type=_RESPONSE,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='DelUserAccessToken',
    full_name='dfs.auth.AuthSrv.DelUserAccessToken',
    index=1,
    containing_service=None,
    input_type=_REQUEST,
    output_type=_RESPONSE,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetCachedAccessToken',
    full_name='dfs.auth.AuthSrv.GetCachedAccessToken',
    index=2,
    containing_service=None,
    input_type=_REQUEST,
    output_type=_RESPONSE,
    serialized_options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_AUTHSRV)

DESCRIPTOR.services_by_name['AuthSrv'] = _AUTHSRV

# @@protoc_insertion_point(module_scope)
