# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: common/ephem/ephem.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import builder as _builder
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from ...common import error_pb2 as common_dot_error__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x18\x63ommon/ephem/ephem.proto\x12\tdfs.ephem\x1a\x12\x63ommon/error.proto\"\xd7\x1e\n\x0bGaia3Record\x12\x12\n\nSolutionId\x18\x01 \x01(\x03\x12\x13\n\x0b\x44\x65signation\x18\x02 \x01(\t\x12\x10\n\x08SourceId\x18\x03 \x01(\x03\x12\x13\n\x0bRandomIndex\x18\x04 \x01(\x03\x12\x10\n\x08RefEpoch\x18\x05 \x01(\x01\x12\n\n\x02Ra\x18\x06 \x01(\x01\x12\x0f\n\x07RaError\x18\x07 \x01(\x01\x12\x0b\n\x03\x44\x65\x63\x18\x08 \x01(\x01\x12\x10\n\x08\x44\x65\x63\x45rror\x18\t \x01(\x01\x12\x10\n\x08Parallax\x18\n \x01(\x01\x12\x15\n\rParallaxError\x18\x0b \x01(\x01\x12\x19\n\x11ParallaxOverError\x18\x0c \x01(\x01\x12\n\n\x02Pm\x18\r \x01(\x01\x12\x0c\n\x04Pmra\x18\x0e \x01(\x01\x12\x11\n\tPmraError\x18\x0f \x01(\x01\x12\r\n\x05Pmdec\x18\x10 \x01(\x01\x12\x12\n\nPmdecError\x18\x11 \x01(\x01\x12\x11\n\tRaDecCorr\x18\x12 \x01(\x01\x12\x16\n\x0eRaParallaxCorr\x18\x13 \x01(\x01\x12\x12\n\nRaPmraCorr\x18\x14 \x01(\x01\x12\x13\n\x0bRaPmdecCorr\x18\x15 \x01(\x01\x12\x17\n\x0f\x44\x65\x63ParallaxCorr\x18\x16 \x01(\x01\x12\x13\n\x0b\x44\x65\x63PmraCorr\x18\x17 \x01(\x01\x12\x14\n\x0c\x44\x65\x63PmdecCorr\x18\x18 \x01(\x01\x12\x18\n\x10ParallaxPmraCorr\x18\x19 \x01(\x01\x12\x19\n\x11ParallaxPmdecCorr\x18\x1a \x01(\x01\x12\x15\n\rPmraPmdecCorr\x18\x1b \x01(\x01\x12\x19\n\x11\x41strometricNObsAl\x18\x1c \x01(\x03\x12\x19\n\x11\x41strometricNObsAc\x18\x1d \x01(\x03\x12\x1d\n\x15\x41strometricNGoodObsAl\x18\x1e \x01(\x03\x12\x1c\n\x14\x41strometricNBadObsAl\x18\x1f \x01(\x03\x12\x18\n\x10\x41strometricGofAl\x18  \x01(\x01\x12\x19\n\x11\x41strometricChi2Al\x18! \x01(\x01\x12\x1e\n\x16\x41strometricExcessNoise\x18\" \x01(\x01\x12!\n\x19\x41strometricExcessNoiseSig\x18# \x01(\x01\x12\x1f\n\x17\x41strometricParamsSolved\x18$ \x01(\x03\x12\x1e\n\x16\x41strometricPrimaryFlag\x18% \x01(\x05\x12\x1d\n\x15NuEffUsedInAstrometry\x18& \x01(\x01\x12\x14\n\x0cPseudocolour\x18\' \x01(\x01\x12\x19\n\x11PseudocolourError\x18( \x01(\x01\x12\x1a\n\x12RaPseudocolourCorr\x18) \x01(\x01\x12\x1b\n\x13\x44\x65\x63PseudocolourCorr\x18* \x01(\x01\x12 \n\x18ParallaxPseudocolourCorr\x18+ \x01(\x01\x12\x1c\n\x14PmraPseudocolourCorr\x18, \x01(\x01\x12\x1d\n\x15PmdecPseudocolourCorr\x18- \x01(\x01\x12\"\n\x1a\x41strometricMatchedTransits\x18. \x01(\x03\x12\x1d\n\x15VisibilityPeriodsUsed\x18/ \x01(\x03\x12\x1d\n\x15\x41strometricSigma5dMax\x18\x30 \x01(\x01\x12\x17\n\x0fMatchedTransits\x18\x31 \x01(\x03\x12\x1a\n\x12NewMatchedTransits\x18\x32 \x01(\x03\x12\x1e\n\x16MatchedTransitsRemoved\x18\x33 \x01(\x03\x12\x1f\n\x17IpdGofHarmonicAmplitude\x18\x34 \x01(\x01\x12\x1b\n\x13IpdGofHarmonicPhase\x18\x35 \x01(\x01\x12\x18\n\x10IpdFracMultiPeak\x18\x36 \x01(\x03\x12\x15\n\rIpdFracOddWin\x18\x37 \x01(\x03\x12\x0c\n\x04Ruwe\x18\x38 \x01(\x01\x12\x1f\n\x17ScanDirectionStrengthK1\x18\x39 \x01(\x01\x12\x1f\n\x17ScanDirectionStrengthK2\x18: \x01(\x01\x12\x1f\n\x17ScanDirectionStrengthK3\x18; \x01(\x01\x12\x1f\n\x17ScanDirectionStrengthK4\x18< \x01(\x01\x12\x1b\n\x13ScanDirectionMeanK1\x18= \x01(\x01\x12\x1b\n\x13ScanDirectionMeanK2\x18> \x01(\x01\x12\x1b\n\x13ScanDirectionMeanK3\x18? \x01(\x01\x12\x1b\n\x13ScanDirectionMeanK4\x18@ \x01(\x01\x12\x18\n\x10\x44uplicatedSource\x18\x41 \x01(\x05\x12\x11\n\tPhotGNObs\x18\x42 \x01(\x03\x12\x15\n\rPhotGMeanFlux\x18\x43 \x01(\x01\x12\x1a\n\x12PhotGMeanFluxError\x18\x44 \x01(\x01\x12\x1e\n\x16PhotGMeanFluxOverError\x18\x45 \x01(\x01\x12\x14\n\x0cPhotGMeanMag\x18\x46 \x01(\x01\x12\x12\n\nPhotBpNObs\x18G \x01(\x03\x12\x16\n\x0ePhotBpMeanFlux\x18H \x01(\x01\x12\x1b\n\x13PhotBpMeanFluxError\x18I \x01(\x01\x12\x1f\n\x17PhotBpMeanFluxOverError\x18J \x01(\x01\x12\x15\n\rPhotBpMeanMag\x18K \x01(\x01\x12\x12\n\nPhotRpNObs\x18L \x01(\x03\x12\x16\n\x0ePhotRpMeanFlux\x18M \x01(\x01\x12\x1b\n\x13PhotRpMeanFluxError\x18N \x01(\x01\x12\x1f\n\x17PhotRpMeanFluxOverError\x18O \x01(\x01\x12\x15\n\rPhotRpMeanMag\x18P \x01(\x01\x12\x1c\n\x14PhotBpRpExcessFactor\x18Q \x01(\x01\x12#\n\x1bPhotBpNContaminatedTransits\x18R \x01(\x01\x12\x1e\n\x16PhotBpNBlendedTransits\x18S \x01(\x01\x12#\n\x1bPhotRpNContaminatedTransits\x18T \x01(\x01\x12\x1e\n\x16PhotRpNBlendedTransits\x18U \x01(\x01\x12\x14\n\x0cPhotProcMode\x18V \x01(\x01\x12\x0c\n\x04\x42pRp\x18W \x01(\x01\x12\x0b\n\x03\x42pG\x18X \x01(\x01\x12\x0b\n\x03GRp\x18Y \x01(\x01\x12\x16\n\x0eRadialVelocity\x18Z \x01(\x01\x12\x1b\n\x13RadialVelocityError\x18[ \x01(\x01\x12\x14\n\x0cRvMethodUsed\x18\\ \x01(\x01\x12\x14\n\x0cRvNbTransits\x18] \x01(\x01\x12\x1d\n\x15RvNbDeblendedTransits\x18^ \x01(\x01\x12\x1f\n\x17RvVisibilityPeriodsUsed\x18_ \x01(\x01\x12\x1c\n\x14RvExpectedSigToNoise\x18` \x01(\x01\x12\x19\n\x11RvRenormalisedGof\x18\x61 \x01(\x01\x12\x15\n\rRvChisqPvalue\x18\x62 \x01(\x01\x12\x16\n\x0eRvTimeDuration\x18\x63 \x01(\x01\x12\x19\n\x11RvAmplitudeRobust\x18\x64 \x01(\x01\x12\x16\n\x0eRvTemplateTeff\x18\x65 \x01(\x01\x12\x16\n\x0eRvTemplateLogg\x18\x66 \x01(\x01\x12\x15\n\rRvTemplateFeH\x18g \x01(\x01\x12\x18\n\x10RvAtmParamOrigin\x18h \x01(\x01\x12\x0e\n\x06Vbroad\x18i \x01(\x01\x12\x13\n\x0bVbroadError\x18j \x01(\x01\x12\x18\n\x10VbroadNbTransits\x18k \x01(\x01\x12\x0f\n\x07GrvsMag\x18l \x01(\x01\x12\x14\n\x0cGrvsMagError\x18m \x01(\x01\x12\x19\n\x11GrvsMagNbTransits\x18n \x01(\x01\x12\x19\n\x11RvsSpecSigToNoise\x18o \x01(\x01\x12\x18\n\x10PhotVariableFlag\x18p \x01(\t\x12\t\n\x01L\x18q \x01(\x01\x12\t\n\x01\x42\x18r \x01(\x01\x12\x0e\n\x06\x45\x63lLon\x18s \x01(\x01\x12\x0e\n\x06\x45\x63lLat\x18t \x01(\x01\x12\x17\n\x0fInQsoCandidates\x18u \x01(\x05\x12\x1a\n\x12InGalaxyCandidates\x18v \x01(\x05\x12\x15\n\rNonSingleStar\x18w \x01(\x03\x12\x17\n\x0fHasXpContinuous\x18x \x01(\x05\x12\x14\n\x0cHasXpSampled\x18y \x01(\x05\x12\x0e\n\x06HasRvs\x18z \x01(\x05\x12\x1a\n\x12HasEpochPhotometry\x18{ \x01(\x05\x12\x12\n\nHasEpochRv\x18| \x01(\x05\x12\x16\n\x0eHasMcmcGspphot\x18} \x01(\x05\x12\x12\n\nHasMcmcMsc\x18~ \x01(\x05\x12\x19\n\x11InAndromedaSurvey\x18\x7f \x01(\x05\x12\"\n\x19\x43lassprobDscCombmodQuasar\x18\x80\x01 \x01(\x01\x12\"\n\x19\x43lassprobDscCombmodGalaxy\x18\x81\x01 \x01(\x01\x12 \n\x17\x43lassprobDscCombmodStar\x18\x82\x01 \x01(\x01\x12\x14\n\x0bTeffGspphot\x18\x83\x01 \x01(\x01\x12\x19\n\x10TeffGspphotLower\x18\x84\x01 \x01(\x01\x12\x19\n\x10TeffGspphotUpper\x18\x85\x01 \x01(\x01\x12\x14\n\x0bLoggGspphot\x18\x86\x01 \x01(\x01\x12\x19\n\x10LoggGspphotLower\x18\x87\x01 \x01(\x01\x12\x19\n\x10LoggGspphotUpper\x18\x88\x01 \x01(\x01\x12\x12\n\tMhGspphot\x18\x89\x01 \x01(\x01\x12\x17\n\x0eMhGspphotLower\x18\x8a\x01 \x01(\x01\x12\x17\n\x0eMhGspphotUpper\x18\x8b\x01 \x01(\x01\x12\x18\n\x0f\x44istanceGspphot\x18\x8c\x01 \x01(\x01\x12\x1d\n\x14\x44istanceGspphotLower\x18\x8d\x01 \x01(\x01\x12\x1d\n\x14\x44istanceGspphotUpper\x18\x8e\x01 \x01(\x01\x12\x15\n\x0c\x41zeroGspphot\x18\x8f\x01 \x01(\x01\x12\x1a\n\x11\x41zeroGspphotLower\x18\x90\x01 \x01(\x01\x12\x1a\n\x11\x41zeroGspphotUpper\x18\x91\x01 \x01(\x01\x12\x12\n\tAgGspphot\x18\x92\x01 \x01(\x01\x12\x17\n\x0e\x41gGspphotLower\x18\x93\x01 \x01(\x01\x12\x17\n\x0e\x41gGspphotUpper\x18\x94\x01 \x01(\x01\x12\x18\n\x0f\x45\x62pminrpGspphot\x18\x95\x01 \x01(\x01\x12\x1d\n\x14\x45\x62pminrpGspphotLower\x18\x96\x01 \x01(\x01\x12\x1d\n\x14\x45\x62pminrpGspphotUpper\x18\x97\x01 \x01(\x01\x12\x17\n\x0eLibnameGspphot\x18\x98\x01 \x01(\t\x12\x10\n\x07NS8HIdx\x18\x99\x01 \x01(\x05\x12\x11\n\x08NS16HIdx\x18\x9a\x01 \x01(\x05\x12\x11\n\x08NS32HIdx\x18\x9b\x01 \x01(\x05\x12\x11\n\x08NS64HIdx\x18\x9c\x01 \x01(\x05\x12\x10\n\x07\x46ileIdx\x18\x9d\x01 \x01(\x05\"\x8e\x01\n\x12\x45phemSearchRequest\x12\n\n\x02ra\x18\x01 \x01(\x01\x12\x0b\n\x03\x64\x65\x63\x18\x02 \x01(\x01\x12\x0e\n\x06radius\x18\x03 \x01(\x01\x12\x0f\n\x07\x63olumns\x18\x04 \x01(\t\x12\x0e\n\x06minMag\x18\x05 \x01(\x01\x12\x0e\n\x06maxMag\x18\x06 \x01(\x01\x12\x0f\n\x07obstime\x18\x07 \x01(\x03\x12\r\n\x05limit\x18\x08 \x01(\x03\"i\n\x13Gaia3SearchResponse\x12\x0f\n\x07success\x18\x01 \x01(\x08\x12\x12\n\ntotalCount\x18\x02 \x01(\x05\x12\x1c\n\x05\x65rror\x18\x03 \x01(\x0b\x32\r.common.Error\x12\x0f\n\x07records\x18\x04 \x01(\x0c\x32\x62\n\x0e\x45phemSearchSrv\x12P\n\x0bGaia3Search\x12\x1d.dfs.ephem.EphemSearchRequest\x1a\x1e.dfs.ephem.Gaia3SearchResponse\"\x00\x30\x01\x42#Z!cnlab.net/csst/proto/common/ephemb\x06proto3')

_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'common.ephem.ephem_pb2', globals())
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'Z!cnlab.net/csst/proto/common/ephem'
  _GAIA3RECORD._serialized_start=60
  _GAIA3RECORD._serialized_end=3987
  _EPHEMSEARCHREQUEST._serialized_start=3990
  _EPHEMSEARCHREQUEST._serialized_end=4132
  _GAIA3SEARCHRESPONSE._serialized_start=4134
  _GAIA3SEARCHRESPONSE._serialized_end=4239
  _EPHEMSEARCHSRV._serialized_start=4241
  _EPHEMSEARCHSRV._serialized_end=4339
# @@protoc_insertion_point(module_scope)
